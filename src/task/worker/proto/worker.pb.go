// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/worker.proto

package worker_proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CallTaskReq struct {
	TaskCodename         string   `protobuf:"bytes,1,opt,name=task_codename,json=taskCodename,proto3" json:"task_codename,omitempty"`
	TaskUniqueId         string   `protobuf:"bytes,2,opt,name=task_unique_id,json=taskUniqueId,proto3" json:"task_unique_id,omitempty"`
	Arguments            []byte   `protobuf:"bytes,3,opt,name=arguments,proto3" json:"arguments,omitempty"`
	Timeout              int32    `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Caller               string   `protobuf:"bytes,5,opt,name=caller,proto3" json:"caller,omitempty"`
	Timestamp            int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallTaskReq) Reset()         { *m = CallTaskReq{} }
func (m *CallTaskReq) String() string { return proto.CompactTextString(m) }
func (*CallTaskReq) ProtoMessage()    {}
func (*CallTaskReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a01179bc4c672ae, []int{0}
}

func (m *CallTaskReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallTaskReq.Unmarshal(m, b)
}
func (m *CallTaskReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallTaskReq.Marshal(b, m, deterministic)
}
func (m *CallTaskReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallTaskReq.Merge(m, src)
}
func (m *CallTaskReq) XXX_Size() int {
	return xxx_messageInfo_CallTaskReq.Size(m)
}
func (m *CallTaskReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CallTaskReq.DiscardUnknown(m)
}

var xxx_messageInfo_CallTaskReq proto.InternalMessageInfo

func (m *CallTaskReq) GetTaskCodename() string {
	if m != nil {
		return m.TaskCodename
	}
	return ""
}

func (m *CallTaskReq) GetTaskUniqueId() string {
	if m != nil {
		return m.TaskUniqueId
	}
	return ""
}

func (m *CallTaskReq) GetArguments() []byte {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *CallTaskReq) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *CallTaskReq) GetCaller() string {
	if m != nil {
		return m.Caller
	}
	return ""
}

func (m *CallTaskReq) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type KillTaskReq struct {
	TaskUniqueId         string   `protobuf:"bytes,1,opt,name=task_unique_id,json=taskUniqueId,proto3" json:"task_unique_id,omitempty"`
	Timestamp            int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KillTaskReq) Reset()         { *m = KillTaskReq{} }
func (m *KillTaskReq) String() string { return proto.CompactTextString(m) }
func (*KillTaskReq) ProtoMessage()    {}
func (*KillTaskReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a01179bc4c672ae, []int{1}
}

func (m *KillTaskReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillTaskReq.Unmarshal(m, b)
}
func (m *KillTaskReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillTaskReq.Marshal(b, m, deterministic)
}
func (m *KillTaskReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillTaskReq.Merge(m, src)
}
func (m *KillTaskReq) XXX_Size() int {
	return xxx_messageInfo_KillTaskReq.Size(m)
}
func (m *KillTaskReq) XXX_DiscardUnknown() {
	xxx_messageInfo_KillTaskReq.DiscardUnknown(m)
}

var xxx_messageInfo_KillTaskReq proto.InternalMessageInfo

func (m *KillTaskReq) GetTaskUniqueId() string {
	if m != nil {
		return m.TaskUniqueId
	}
	return ""
}

func (m *KillTaskReq) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*CallTaskReq)(nil), "worker_proto.CallTaskReq")
	proto.RegisterType((*KillTaskReq)(nil), "worker_proto.KillTaskReq")
}

func init() { proto.RegisterFile("proto/worker.proto", fileDescriptor_6a01179bc4c672ae) }

var fileDescriptor_6a01179bc4c672ae = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xbf, 0x4e, 0xf3, 0x30,
	0x14, 0xc5, 0xe5, 0xaf, 0x5f, 0x03, 0xbd, 0x0d, 0x48, 0x78, 0xa8, 0x4c, 0x61, 0x88, 0x0a, 0x43,
	0x26, 0x47, 0x82, 0x99, 0xa9, 0x62, 0x40, 0x4c, 0x04, 0x10, 0x63, 0xe4, 0x26, 0x97, 0x28, 0xca,
	0x1f, 0xa7, 0x8e, 0x03, 0xe2, 0x31, 0x78, 0x29, 0x9e, 0x0b, 0xd9, 0x69, 0x94, 0x08, 0xe8, 0x78,
	0x8e, 0xce, 0x3d, 0x3a, 0xf7, 0x07, 0xb4, 0x56, 0x52, 0xcb, 0xe0, 0x5d, 0xaa, 0x1c, 0x15, 0xb7,
	0x82, 0xba, 0x9d, 0x8a, 0xac, 0x5a, 0x9e, 0xa5, 0x52, 0xa6, 0x05, 0x06, 0x56, 0x6d, 0xda, 0xd7,
	0x00, 0xcb, 0x5a, 0x7f, 0x74, 0xd1, 0xd5, 0x17, 0x81, 0xf9, 0x5a, 0x14, 0xc5, 0x93, 0x68, 0xf2,
	0x10, 0xb7, 0xf4, 0x02, 0x8e, 0xb4, 0x68, 0xf2, 0x28, 0x96, 0x09, 0x56, 0xa2, 0x44, 0x46, 0x3c,
	0xe2, 0xcf, 0x42, 0xd7, 0x98, 0xeb, 0x9d, 0x47, 0x2f, 0xe1, 0xd8, 0x86, 0xda, 0x2a, 0xdb, 0xb6,
	0x18, 0x65, 0x09, 0xfb, 0x37, 0xa4, 0x9e, 0xad, 0x79, 0x97, 0xd0, 0x73, 0x98, 0x09, 0x95, 0xb6,
	0x25, 0x56, 0xba, 0x61, 0x13, 0x8f, 0xf8, 0x6e, 0x38, 0x18, 0x94, 0xc1, 0x81, 0xce, 0x4a, 0x94,
	0xad, 0x66, 0xff, 0x3d, 0xe2, 0x4f, 0xc3, 0x5e, 0xd2, 0x05, 0x38, 0xb1, 0x28, 0x0a, 0x54, 0x6c,
	0x6a, 0x5b, 0x77, 0xca, 0xf4, 0x99, 0x48, 0xa3, 0x45, 0x59, 0x33, 0xc7, 0x23, 0xfe, 0x24, 0x1c,
	0x8c, 0xd5, 0x03, 0xcc, 0xef, 0xb3, 0xe1, 0x8f, 0xdf, 0x13, 0xc9, 0xdf, 0x13, 0xf7, 0x57, 0x5e,
	0x7d, 0x12, 0x38, 0x31, 0x7d, 0x2f, 0x96, 0xe6, 0x23, 0xaa, 0xb7, 0x2c, 0x46, 0x7a, 0x03, 0x87,
	0x3d, 0x30, 0x7a, 0xca, 0xc7, 0xa4, 0xf9, 0x08, 0xe4, 0x72, 0xc1, 0x3b, 0xec, 0xbc, 0xc7, 0xce,
	0x6f, 0x0d, 0x76, 0x73, 0xde, 0xef, 0xfc, 0x79, 0x3e, 0xda, 0xbf, 0xef, 0x7c, 0xe3, 0x58, 0x7d,
	0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x82, 0xea, 0x31, 0xd8, 0xf7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskWorkerServiceClient is the client API for TaskWorkerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskWorkerServiceClient interface {
	// CallTask 调用任务
	CallTask(ctx context.Context, in *CallTaskReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// KillTask 结束任务
	KillTask(ctx context.Context, in *KillTaskReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type taskWorkerServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskWorkerServiceClient(cc *grpc.ClientConn) TaskWorkerServiceClient {
	return &taskWorkerServiceClient{cc}
}

func (c *taskWorkerServiceClient) CallTask(ctx context.Context, in *CallTaskReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/worker_proto.TaskWorkerService/CallTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskWorkerServiceClient) KillTask(ctx context.Context, in *KillTaskReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/worker_proto.TaskWorkerService/KillTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskWorkerServiceServer is the server API for TaskWorkerService service.
type TaskWorkerServiceServer interface {
	// CallTask 调用任务
	CallTask(context.Context, *CallTaskReq) (*emptypb.Empty, error)
	// KillTask 结束任务
	KillTask(context.Context, *KillTaskReq) (*emptypb.Empty, error)
}

func RegisterTaskWorkerServiceServer(s *grpc.Server, srv TaskWorkerServiceServer) {
	s.RegisterService(&_TaskWorkerService_serviceDesc, srv)
}

func _TaskWorkerService_CallTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskWorkerServiceServer).CallTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/worker_proto.TaskWorkerService/CallTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskWorkerServiceServer).CallTask(ctx, req.(*CallTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskWorkerService_KillTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KillTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskWorkerServiceServer).KillTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/worker_proto.TaskWorkerService/KillTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskWorkerServiceServer).KillTask(ctx, req.(*KillTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskWorkerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "worker_proto.TaskWorkerService",
	HandlerType: (*TaskWorkerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CallTask",
			Handler:    _TaskWorkerService_CallTask_Handler,
		},
		{
			MethodName: "KillTask",
			Handler:    _TaskWorkerService_KillTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/worker.proto",
}
