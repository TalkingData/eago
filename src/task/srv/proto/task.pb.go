// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: proto/task.proto

package task

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type QueryWithPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query    map[string]string `protobuf:"bytes,1,rep,name=query,proto3" json:"query,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Page     uint32            `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint32            `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *QueryWithPage) Reset() {
	*x = QueryWithPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryWithPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryWithPage) ProtoMessage() {}

func (x *QueryWithPage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryWithPage.ProtoReflect.Descriptor instead.
func (*QueryWithPage) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{0}
}

func (x *QueryWithPage) GetQuery() map[string]string {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *QueryWithPage) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryWithPage) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type PagedTasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks    []*Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Page     uint32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Pages    uint32  `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`
	PageSize uint32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Total    uint32  `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PagedTasks) Reset() {
	*x = PagedTasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagedTasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagedTasks) ProtoMessage() {}

func (x *PagedTasks) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagedTasks.ProtoReflect.Descriptor instead.
func (*PagedTasks) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{1}
}

func (x *PagedTasks) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *PagedTasks) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PagedTasks) GetPages() uint32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *PagedTasks) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PagedTasks) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PagedSchedules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedules []*Schedule `protobuf:"bytes,1,rep,name=schedules,proto3" json:"schedules,omitempty"`
	Page      uint32      `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Pages     uint32      `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`
	PageSize  uint32      `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Total     uint32      `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PagedSchedules) Reset() {
	*x = PagedSchedules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagedSchedules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagedSchedules) ProtoMessage() {}

func (x *PagedSchedules) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagedSchedules.ProtoReflect.Descriptor instead.
func (*PagedSchedules) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{2}
}

func (x *PagedSchedules) GetSchedules() []*Schedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

func (x *PagedSchedules) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PagedSchedules) GetPages() uint32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *PagedSchedules) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PagedSchedules) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Codename     string `protobuf:"bytes,2,opt,name=codename,proto3" json:"codename,omitempty"`
	FormalParams string `protobuf:"bytes,3,opt,name=formal_params,json=formalParams,proto3" json:"formal_params,omitempty"`
	Description  string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{3}
}

func (x *Task) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetCodename() string {
	if x != nil {
		return x.Codename
	}
	return ""
}

func (x *Task) GetFormalParams() string {
	if x != nil {
		return x.FormalParams
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Schedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskCodename string `protobuf:"bytes,2,opt,name=task_codename,json=taskCodename,proto3" json:"task_codename,omitempty"`
	Expression   string `protobuf:"bytes,3,opt,name=expression,proto3" json:"expression,omitempty"`
	Timeout      int64  `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Arguments    string `protobuf:"bytes,5,opt,name=arguments,proto3" json:"arguments,omitempty"`
	Disabled     bool   `protobuf:"varint,6,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{4}
}

func (x *Schedule) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Schedule) GetTaskCodename() string {
	if x != nil {
		return x.TaskCodename
	}
	return ""
}

func (x *Schedule) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *Schedule) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Schedule) GetArguments() string {
	if x != nil {
		return x.Arguments
	}
	return ""
}

func (x *Schedule) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskCodename string `protobuf:"bytes,1,opt,name=task_codename,json=taskCodename,proto3" json:"task_codename,omitempty"`
	Status       int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Caller       string `protobuf:"bytes,3,opt,name=caller,proto3" json:"caller,omitempty"`
	Worker       string `protobuf:"bytes,4,opt,name=worker,proto3" json:"worker,omitempty"`
	StartAt      string `protobuf:"bytes,5,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt        string `protobuf:"bytes,6,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{5}
}

func (x *Result) GetTaskCodename() string {
	if x != nil {
		return x.TaskCodename
	}
	return ""
}

func (x *Result) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Result) GetCaller() string {
	if x != nil {
		return x.Caller
	}
	return ""
}

func (x *Result) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

func (x *Result) GetStartAt() string {
	if x != nil {
		return x.StartAt
	}
	return ""
}

func (x *Result) GetEndAt() string {
	if x != nil {
		return x.EndAt
	}
	return ""
}

type CallTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskCodename string `protobuf:"bytes,1,opt,name=task_codename,json=taskCodename,proto3" json:"task_codename,omitempty"`
	Timeout      int64  `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Caller       string `protobuf:"bytes,3,opt,name=caller,proto3" json:"caller,omitempty"`
	Arguments    []byte `protobuf:"bytes,4,opt,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *CallTaskReq) Reset() {
	*x = CallTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallTaskReq) ProtoMessage() {}

func (x *CallTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallTaskReq.ProtoReflect.Descriptor instead.
func (*CallTaskReq) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{6}
}

func (x *CallTaskReq) GetTaskCodename() string {
	if x != nil {
		return x.TaskCodename
	}
	return ""
}

func (x *CallTaskReq) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *CallTaskReq) GetCaller() string {
	if x != nil {
		return x.Caller
	}
	return ""
}

func (x *CallTaskReq) GetArguments() []byte {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type TaskUniqueId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskUniqueId string `protobuf:"bytes,1,opt,name=task_unique_id,json=taskUniqueId,proto3" json:"task_unique_id,omitempty"`
}

func (x *TaskUniqueId) Reset() {
	*x = TaskUniqueId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskUniqueId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskUniqueId) ProtoMessage() {}

func (x *TaskUniqueId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskUniqueId.ProtoReflect.Descriptor instead.
func (*TaskUniqueId) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{7}
}

func (x *TaskUniqueId) GetTaskUniqueId() string {
	if x != nil {
		return x.TaskUniqueId
	}
	return ""
}

type SetTaskStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskUniqueId string `protobuf:"bytes,1,opt,name=task_unique_id,json=taskUniqueId,proto3" json:"task_unique_id,omitempty"`
	Status       int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetTaskStatusReq) Reset() {
	*x = SetTaskStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTaskStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTaskStatusReq) ProtoMessage() {}

func (x *SetTaskStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTaskStatusReq.ProtoReflect.Descriptor instead.
func (*SetTaskStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{8}
}

func (x *SetTaskStatusReq) GetTaskUniqueId() string {
	if x != nil {
		return x.TaskUniqueId
	}
	return ""
}

func (x *SetTaskStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AppendTaskLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskUniqueId string `protobuf:"bytes,1,opt,name=task_unique_id,json=taskUniqueId,proto3" json:"task_unique_id,omitempty"`
	Content      string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AppendTaskLogReq) Reset() {
	*x = AppendTaskLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendTaskLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendTaskLogReq) ProtoMessage() {}

func (x *AppendTaskLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendTaskLogReq.ProtoReflect.Descriptor instead.
func (*AppendTaskLogReq) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{9}
}

func (x *AppendTaskLogReq) GetTaskUniqueId() string {
	if x != nil {
		return x.TaskUniqueId
	}
	return ""
}

func (x *AppendTaskLogReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type BoolMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *BoolMsg) Reset() {
	*x = BoolMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_task_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolMsg) ProtoMessage() {}

func (x *BoolMsg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolMsg.ProtoReflect.Descriptor instead.
func (*BoolMsg) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{10}
}

func (x *BoolMsg) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_proto_task_proto protoreflect.FileDescriptor

var file_proto_task_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0xb0, 0x01, 0x0a, 0x0d, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x57, 0x69, 0x74, 0x68, 0x50, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x57, 0x69, 0x74, 0x68, 0x50, 0x61, 0x67, 0x65, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8b, 0x01, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9b, 0x01, 0x0a, 0x0e, 0x50, 0x61,
	0x67, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x09,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x79, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xb3, 0x01, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x64, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b,
	0x43, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x64,
	0x41, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x43,
	0x6f, 0x64, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x34, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x55,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x74, 0x61, 0x73, 0x6b, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0x50, 0x0a,
	0x10, 0x53, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x55,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x52, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x73,
	0x6b, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x19, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x32, 0x90,
	0x03, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34,
	0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x13, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x57, 0x69, 0x74, 0x68, 0x50, 0x61, 0x67, 0x65,
	0x1a, 0x10, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x64, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x13, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x57, 0x69, 0x74, 0x68, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x14, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x12, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x1a, 0x0c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x11, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x08, 0x4b, 0x69, 0x6c, 0x6c,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0d, 0x53, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x4d, 0x73,
	0x67, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x73,
	0x6b, 0x4c, 0x6f, 0x67, 0x12, 0x16, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x41, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x42, 0x0c, 0x5a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x74, 0x61, 0x73, 0x6b, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_task_proto_rawDescOnce sync.Once
	file_proto_task_proto_rawDescData = file_proto_task_proto_rawDesc
)

func file_proto_task_proto_rawDescGZIP() []byte {
	file_proto_task_proto_rawDescOnce.Do(func() {
		file_proto_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_task_proto_rawDescData)
	})
	return file_proto_task_proto_rawDescData
}

var file_proto_task_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_task_proto_goTypes = []interface{}{
	(*QueryWithPage)(nil),    // 0: task.QueryWithPage
	(*PagedTasks)(nil),       // 1: task.PagedTasks
	(*PagedSchedules)(nil),   // 2: task.PagedSchedules
	(*Task)(nil),             // 3: task.Task
	(*Schedule)(nil),         // 4: task.Schedule
	(*Result)(nil),           // 5: task.Result
	(*CallTaskReq)(nil),      // 6: task.CallTaskReq
	(*TaskUniqueId)(nil),     // 7: task.TaskUniqueId
	(*SetTaskStatusReq)(nil), // 8: task.SetTaskStatusReq
	(*AppendTaskLogReq)(nil), // 9: task.AppendTaskLogReq
	(*BoolMsg)(nil),          // 10: task.BoolMsg
	nil,                      // 11: task.QueryWithPage.QueryEntry
}
var file_proto_task_proto_depIdxs = []int32{
	11, // 0: task.QueryWithPage.query:type_name -> task.QueryWithPage.QueryEntry
	3,  // 1: task.PagedTasks.tasks:type_name -> task.Task
	4,  // 2: task.PagedSchedules.schedules:type_name -> task.Schedule
	0,  // 3: task.TaskService.ListTasks:input_type -> task.QueryWithPage
	0,  // 4: task.TaskService.ListSchedules:input_type -> task.QueryWithPage
	7,  // 5: task.TaskService.GetResult:input_type -> task.TaskUniqueId
	6,  // 6: task.TaskService.CallTask:input_type -> task.CallTaskReq
	7,  // 7: task.TaskService.KillTask:input_type -> task.TaskUniqueId
	8,  // 8: task.TaskService.SetTaskStatus:input_type -> task.SetTaskStatusReq
	9,  // 9: task.TaskService.AppendTaskLog:input_type -> task.AppendTaskLogReq
	1,  // 10: task.TaskService.ListTasks:output_type -> task.PagedTasks
	2,  // 11: task.TaskService.ListSchedules:output_type -> task.PagedSchedules
	5,  // 12: task.TaskService.GetResult:output_type -> task.Result
	7,  // 13: task.TaskService.CallTask:output_type -> task.TaskUniqueId
	10, // 14: task.TaskService.KillTask:output_type -> task.BoolMsg
	10, // 15: task.TaskService.SetTaskStatus:output_type -> task.BoolMsg
	10, // 16: task.TaskService.AppendTaskLog:output_type -> task.BoolMsg
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_task_proto_init() }
func file_proto_task_proto_init() {
	if File_proto_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryWithPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagedTasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagedSchedules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskUniqueId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTaskStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendTaskLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_task_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_task_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_task_proto_goTypes,
		DependencyIndexes: file_proto_task_proto_depIdxs,
		MessageInfos:      file_proto_task_proto_msgTypes,
	}.Build()
	File_proto_task_proto = out.File
	file_proto_task_proto_rawDesc = nil
	file_proto_task_proto_goTypes = nil
	file_proto_task_proto_depIdxs = nil
}
