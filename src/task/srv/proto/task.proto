syntax = "proto3";

package task;
option go_package = "proto;task";

service TaskService {

  // ListTasks 列出所有任务
  rpc ListTasks(Empty) returns (Tasks) {}

  // CallTask 调用任务
  rpc CallTask(CallTaskReq) returns (CallTaskRsp) {}

  // SetTaskStatus 设置任务状态
  rpc SetTaskStatus(SetTaskStatusReq) returns (BoolMsg) {}

  // AppendTaskLog 追加任务日志
  rpc AppendTaskLog(stream AppendTaskLogReq) returns (stream BoolMsg) {}
}

message Tasks {
  repeated Task tasks = 1;
}

message Task {
  int32 id = 1;
  string codename = 2;
  string arguments = 3;
  string description = 4;
}

message CallTaskReq {
  string task_codename = 1;

  int64 timeout = 3;
  string arguments = 2;
  string caller = 4;
}

message CallTaskRsp {
  string task_unique_id = 1;
}

message SetTaskStatusReq {
  string task_unique_id = 1;
  int32 status = 2;
}

message AppendTaskLogReq {
  string task_unique_id = 1;
  string content = 2;
}

message BoolMsg {
  bool ok = 1;
}

message Empty {}
